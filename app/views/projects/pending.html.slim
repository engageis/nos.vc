#page_content
  .container.container-wide
    .project_content
      .title
        h1= t('.title')

      #pending_projects
        .bootstrap-form
          = form_for @search, :url => pending_projects_path do |f|
            fieldset
              .input
                = f.text_field :id_equals, :placeholder => t('.id')
              .input
                = f.text_field :name_contains, :placeholder => t('.name')
              .input
                = f.text_field :user_name_contains, :placeholder => t('.user')

            fieldset
              .input.check
                = f.check_box :visible_is_true
                = f.label :visible_is_true, t('.visible')
              /.input.check
              /  = f.check_box :rejected_is_true
              /  = f.label :rejected_is_true, t('.rejected')
              /.input.check
              /  = f.check_box :recommended_is_true
              /  = f.label :recommended_is_true, t('.recommended')
              .input.check
                = f.check_box :successful_is_true
                = f.label :successful_is_true, t('.success')
              .input.check
                = f.check_box :can_finish_is_true
                = f.label :can_finish_is_true, t('.can_finish')
              .input.check
                = f.check_box :finished_is_true
                = f.label :finished_is_true, t('.finished')

              .bootstrap-twitter
                .input.submit
                  = f.submit t('.submit'), class: 'btn btn-success'

        .total_results
          #total_results
            = pluralize_without_number @search.count, t('found_singular'), t('found_plural')
            strong= " #{@search.count} "
            = pluralize_without_number @search.count, t('activerecord.models.project').downcase

        .clearfix

        = paginate @projects
        .clear

        - if @projects.empty?
          = t('.no_projects')
        - else
          .bootstrap-twitter
            table.table.table-striped
              thead
                tr
                  th= t('.id')
                  th= t('.project')
                  th= t('.when_short')
                  th= t('.expires_at')
                  th= t('.deadline')
                  th= t('.user')
                  th= t('.email')
                  th= t('.payment_email')
                  th= t('.expected_revenue')
                  th= t('.total_payment_method_fee')
                  th= t('.expected_profit')
                  th= t('.category')
                  th= t('.visible')
                  th= t('.can_finish')
                  th= t('.success')
                  th= t('.slug')
              tbody
                - @projects.each do |project|
                  tr class=cycle("even", "odd")
                    td= project.id

                    td title=project.name
                      = link_to project_path(project) do
                        = image_tag project.display_image, class: 'project_img'

                    td= project.when_short

                    td= l(project.expires_at)

                    td= l(project.expires_at + 7.day)

                    td title=project.user.display_name
                      = link_to user_path(project.user) do
                        = image_tag project.user.display_image, class: 'user_img'

                    td= project.user.email

                    td= project.user.payment_email

                    td= project.display_expected_revenue

                    td= project.display_total_payment_method_fee

                    td= project.display_expected_profit

                    td= project.category.name

                    td= check_box_tag "project__visible__#{project.id}", '1', project.visible

                    / td= check_box_tag "project__rejected__#{project.id}", '1', project.rejected

                    / td= check_box_tag "project__recommended__#{project.id}", '1', project.recommended

                    td
                      = check_box_tag "project__can_finish__#{project.id}", '1', project.can_finish
                      = (project.finished ? "(x)" : "( )")

                    / td= (project.finished ? t('yes') : t('no'))

                    td= (project.successful ? I18n.t('yes') : I18n.t('no'))

                    td= on_the_spot_edit project, :permalink, :tooltip => '-'

        = paginate @projects

    .clearfix
