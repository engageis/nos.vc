.clearfix
= semantic_form_for @project, :html => { :id => 'project_form' } do |form|
  = form.inputs do
    = form.input :user_id, :as => :hidden, :input_html => { :value => current_user.id }
    h2= t('projects.start.the_meeting')
    fieldset
      = form.input :name, :as => :string
      = form.input :about
      = form.input :headline, :input_html => { :maxlength => 140 }
      = form.input :when_short
      = form.input :when_long
      = form.input :category, :collection => Category.all(:order => :name)
      = form.input :location, :hint => t('formtastic.hints.project.location').html_safe
      = form.input :video_url, :as => :string
      = form.input :image_url, :as => :string
    h2= t('projects.start.the_people')
    fieldset
      = form.input :leader_id, :as => :string, :input_html => { :value => current_user.id }
      = form.input :leader_bio
    h2= t('projects.start.the_registrations')
    fieldset
      = form.input :goal
      = form.input :maximum_backers
    = form.input :expires_at, :as => :string
    #project_rewards
      javascript:
        var rewards_count = #{@project.rewards.size}
        var rewards_id = #{@project.rewards.size}
      #rewards_wrapper
        = form.semantic_fields_for :rewards do |reward|
          .reward
            .remove_reward_wrapper
              .bootstrap-twitter
                = link_to '#', class: 'remove_reward btn btn-danger' do
                  i.icon-trash.icon-white
                  = t('remove')
            = reward.input :description
            = reward.input :minimum_value
            = reward.input :maximum_backers
            = reward.input :expires_at, :as => :string, :label => t('formtastic.labels.reward.expires_at'), :input_html =>  {:class => 'reward_expires_at'}
            = reward.input :private, input_html: { class: "private" }
      #add_reward_wrapper.clearfix
        .bootstrap-twitter
          .form-actions
            = link_to '#', class: 'add_reward btn btn-success', id: 'add_reward' do
              i.icon-plus.icon-white
              = t('.add_reward')
      .clearfix

    #project_dynamic_fields
      = check_box_tag "has_dynamic_fields"
      = label_tag "has_dynamic_fields", t('.has_dynamic_fields')
      javascript:
        var dynamic_fields_count = #{@project.rewards.size}
        var dynamic_fields_id = #{@project.dynamic_fields.size}
      #dynamic_fields_wrapper
        = form.semantic_fields_for :dynamic_fields do |dynamic_field|
          .dynamic_field
            .remove_dynamic_field_wrapper
              .bootstrap-twitter
                = link_to '#', class: 'remove_dynamic_field btn btn-danger' do
                  i.icon-trash.icon-white
                  = t('remove')
            = dynamic_field.input :input_name
            /= dynamic_field.input :input_value
            = dynamic_field.input :required
            .clearfix
      #add_dynamic_field_wrapper.clearfix
        .bootstrap-twitter
          .form-actions
            = link_to '#', class: 'add_dynamic_field btn btn-success', id: 'add_dynamic_field' do
              i.icon-plus.icon-white
              = t('.add_dynamic_field')
      .clearfix

    .submit
      .bootstrap-alert
        .alert
          .important= t('.important_html', :link => link_to("MoIP", "http://www.moip.com.br/", :target => :_blank))
      fieldset.accept
        = check_box_tag 'accept'
        = label_tag 'accept', t('accept_terms_html', :terms => link_to(t('terms'), terms_path, :target => :_blank), :guidelines => link_to(t('guidelines'), guidelines_path, :target => :_blank), :site => t('site.name')), :class => 'inline'
      = form.actions do
        .bootstrap-twitter
          = form.submit t('.submit'), :disabled => true, :class => 'btn', :id => 'project_submit'
          span = t('.submit_complement')

